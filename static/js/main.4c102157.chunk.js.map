{"version":3,"sources":["images/sami.jpg","images/netflix.jpg","images/airbnb.jpg","images/twitter.jpg","images/amazon.jpg","images/reddit.jpg","images/spotify.jpg","images/vacation.jpg","images/imessage.jpg","SectionHeader.js","About.js","Home.js","Navbar.js","Project.js","Projects.js","Work.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SectionHeader","title","color","className","style","About","id","onClick","window","open","href","Home","Button","variant","disableElevation","Navbar","useState","anchorEl","setAnchorEl","Avatar","alt","src","sami","activeClass","to","spy","smooth","duration","icon","faEnvelope","size","rel","target","faGithub","useStyles","makeStyles","root","maxWidth","margin","borderRadius","boxShadow","display","flexDirection","justifyContent","media","paddingTop","objectFit","backgroundPosition","button","width","padding","link","marginLeft","Project","image","description","liveDemo","githubLink","projectTags","classes","Card","CardActionArea","CardMedia","CardContent","map","tag","Chip","label","key","Projects","Container","Grid","container","spacing","NetflixClone","AirBnbClone","VacationClone","TwitterClone","RedditClone","ImessageClone","AmazonClone","SpotifyClone","Work","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,kUCc5BC,G,kBAZO,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC9B,OACE,yBACEC,UAAU,kBACVC,MAAOF,EAAQ,CAAEA,MAAM,GAAD,OAAKA,IAAY,CAAEA,MAAO,UAE/CD,EACD,yBAAKE,UAAU,6BC8CNE,EApDD,WACZ,OACE,6BAASF,UAAU,QAAQG,GAAG,SAC5B,yBAAKH,UAAU,oBACb,kBAAC,EAAD,CAAeF,MAAM,QAAQC,MAAM,UACnC,yBAAKC,UAAU,yBACb,wBAAIA,UAAU,6BAAd,SACA,yBACEI,QAAS,kBAAMC,OAAOC,KAAP,mCACfN,UAAU,yBAFZ,4BAOF,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,6BAAd,2BACA,4BACE,uBAAGO,KAAK,iCAAR,eAEF,4BACE,uBAAGA,KAAK,0DAAR,gBAKJ,yBAAKP,UAAU,qBACb,8NAGkE,KAElE,6JAE8D,IAC5D,gF,uBCXGQ,G,MAtBF,WACX,OACE,6BAASR,UAAU,OAAOG,GAAG,QAC3B,yBAAKH,UAAU,gBACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,sBAAd,cACA,wBAAIA,UAAU,uBAAd,wBACA,yBAAKA,UAAU,sBACb,kBAACS,EAAA,EAAD,CACEC,QAAQ,WACRC,kBAAgB,EAChBP,QAAS,kBAAMC,OAAOC,KAAP,oCAHjB,sB,2FCgLGM,EAlLA,WAAO,IAAD,EACaC,oBAAS,GADtB,mBACZC,EADY,KACFC,EADE,KAMnB,OACE,oCACE,yBAAKf,UAAU,UACb,yBAAKA,UAAU,kBACb,0CACA,kBAACS,EAAA,EAAD,CAAQL,QARW,WACzBW,GAAY,SAACD,GAAD,OAAeA,OAQnB,kBAAC,IAAD,CAAUd,UAAU,uBAGxB,wBAAIA,UAAU,eACZ,kBAACgB,EAAA,EAAD,CAAQhB,UAAU,kBAAkBiB,IAAI,aAAaC,IAAKC,MAC1D,wBAAInB,UAAU,gBACZ,kBAAC,OAAD,CACEA,UAAU,eACVoB,YAAY,mBACZC,GAAG,OACHC,KAAK,EACLC,QAAQ,EACRC,SAAU,KANZ,SAYF,wBAAIxB,UAAU,gBACZ,kBAAC,OAAD,CACEA,UAAU,eACVoB,YAAY,mBACZC,GAAG,QACHC,KAAK,EACLC,QAAQ,EACRC,SAAU,KANZ,UAWF,wBAAIxB,UAAU,gBACZ,kBAAC,OAAD,CACEA,UAAU,eACVoB,YAAY,mBACZC,GAAG,UACHC,KAAK,EACLC,QAAQ,EACRC,SAAU,KANZ,aAWF,wBAAIxB,UAAU,gBACZ,kBAAC,OAAD,CACEA,UAAU,eACVoB,YAAY,mBACZC,GAAG,OACHC,KAAK,EACLC,QAAQ,EACRC,SAAU,KANZ,SA0BF,wBAAIxB,UAAU,gCACZ,yBACEA,UAAU,iBACVI,QAAS,kBAAMC,OAAOC,KAAP,oCAEf,kBAAC,IAAD,CAAiBmB,KAAMC,IAAYC,KAAK,OAAQ,IAChD,0BAAM3B,UAAU,sBAAhB,UAGF,uBACEO,KAAK,gCACLP,UAAU,iBACV4B,IAAI,sBACJC,OAAO,UAEP,kBAAC,IAAD,CAAiBJ,KAAMK,IAAUH,KAAK,OACtC,0BAAM3B,UAAU,sBAAhB,cAKR,yBACEA,UACEc,EACI,yBACA,mCAGN,4BACE,wBAAId,UAAU,gBACZ,kBAAC,OAAD,CACEA,UAAU,qBACVoB,YAAY,mBACZC,GAAG,OACHC,KAAK,EACLC,QAAQ,EACRC,SAAU,KANZ,SAYF,wBAAIxB,UAAU,gBACZ,kBAAC,OAAD,CACEA,UAAU,qBACVoB,YAAY,mBACZC,GAAG,QACHC,KAAK,EACLC,QAAQ,EACRC,SAAU,KANZ,UAWF,wBAAIxB,UAAU,gBACZ,kBAAC,OAAD,CACEA,UAAU,qBACVoB,YAAY,mBACZC,GAAG,UACHC,KAAK,EACLC,QAAQ,EACRC,SAAU,KANZ,aAWF,wBAAIxB,UAAU,gBACZ,kBAAC,OAAD,CACEA,UAAU,qBACVoB,YAAY,mBACZC,GAAG,OACHC,KAAK,EACLC,QAAQ,EACRC,SAAU,KANZ,a,4GClJNO,EAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,IACVC,OAAQ,GACRC,aAAc,GACdC,UAAW,yCACXC,QAAS,OACTC,cAAe,SACfC,eAAgB,iBAElBC,MAAO,CACLC,WAAY,SACZC,UAAW,QACXC,mBAAoB,QAEtBC,OAAQ,CACNC,MAAO,MACPC,QAAS,QAEXC,KAAM,CACJC,WAAY,KAuDDC,EAnDC,SAAC,GAOV,IANLC,EAMI,EANJA,MACArD,EAKI,EALJA,MACAsD,EAII,EAJJA,YACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,WACAC,EACI,EADJA,YAEMC,EAAUzB,IAChB,OACE,kBAAC0B,EAAA,EAAD,CAAMzD,UAAWwD,EAAQvB,MACvB,kBAACyB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAW3D,UAAWwD,EAAQf,MAAOU,MAAOA,EAAOrD,MAAOA,IAC1D,kBAAC8D,EAAA,EAAD,CAAa5D,UAAU,oBACrB,4BAAKF,GACL,2BAAIsD,GACHG,EACC,yBAAKvD,UAAU,mBACZuD,EAAYM,KAAI,SAACC,GAAD,OACf,kBAACC,EAAA,EAAD,CAAMC,MAAOF,EAAKG,IAAKH,QAGzB,OAGR,yBAAK9D,UAAU,oBACb,kBAACS,EAAA,EAAD,CACET,UAAWwD,EAAQX,OACnBlB,KAAK,QACL5B,MAAM,UACN6B,IAAI,sBACJC,OAAO,SACPtB,KAAM8C,GANR,aAQY,kBAAC,IAAD,CAAYrD,UAAU,yBAElC,kBAACS,EAAA,EAAD,CACET,UAAWwD,EAAQX,OACnBlB,KAAK,QACL5B,MAAM,UACN6B,IAAI,sBACJC,OAAO,SACPtB,KAAM+C,GANR,UAQS,kBAAC,IAAD,CAAUtD,UAAWwD,EAAQR,W,0JCuD/BkB,EAtHE,WACf,OACE,6BAASlE,UAAU,WAAWG,GAAG,WAC/B,yBAAKH,UAAU,uBACb,kBAAC,EAAD,CAAeF,MAAO,aACtB,kBAACqE,EAAA,EAAD,CAAWjC,SAAS,MAClB,kBAACkC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGtE,UAAU,kBACpC,kBAAC,EAAD,CACEmD,MAAOoB,IACPzE,MAAO,gBACPsD,YACE,0DAEFC,SAAU,uCACVC,WAAY,6CACZC,YAAa,CAAC,UAAW,WAAY,iBAGvC,kBAAC,EAAD,CACEJ,MAAOqB,IACP1E,MAAO,eACPsD,YACE,qEAEFC,SAAU,sCACVC,WAAY,4CACZC,YAAa,CAAC,UAAW,WAAY,iBAGvC,kBAAC,EAAD,CACEJ,MAAOsB,IACP3E,MAAO,mBACPsD,YACE,qHAEFC,SAAU,uCACVC,WAAY,4CACZC,YAAa,CAAC,aAAc,cAE9B,kBAAC,EAAD,CACEJ,MAAOuB,IACP5E,MAAO,gBACPsD,YACE,6DAEFC,SAAU,uCACVC,WAAY,6CACZC,YAAa,CAAC,aAAc,WAAY,iBAG1C,kBAAC,EAAD,CACEJ,MAAOwB,IACP7E,MAAO,eACPsD,YACE,qHAEFC,SAAU,sCACVC,WAAY,4CACZC,YAAa,CAAC,UAAW,WAAY,iBAGvC,kBAAC,EAAD,CACEJ,MAAOyB,IACP9E,MAAO,iBACPsD,YACE,wHAEFC,SAAU,wCACVC,WAAY,8CACZC,YAAa,CACX,UACA,WACA,cACA,iBACA,QACA,iBAGJ,kBAAC,EAAD,CACEJ,MAAO0B,IACP/E,MAAO,eACPsD,YACE,+IAEFC,SAAU,+BACVC,WAAY,4CACZC,YAAa,CACX,UACA,UACA,WACA,SACA,iBACA,cACA,iBAGJ,kBAAC,EAAD,CACEJ,MAAO2B,IACPhF,MAAO,gBACPsD,YACE,4IAEFC,SAAU,uCACVC,WAAY,6CACZC,YAAa,CACX,UACA,WACA,iBACA,sBCnEDwB,G,MAtDF,WACX,OACE,6BAAS/E,UAAU,OAAOG,GAAG,QAC3B,kBAAC,EAAD,CAAeL,MAAM,eACrB,yBAAKE,UAAU,mBACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,qBACb,8DACA,wBAAIA,UAAU,gBACZ,6IAIA,gIAIA,4BACE,kEAIN,yBAAKA,UAAU,cACb,qDAGJ,yBAAKA,UAAU,cACb,yBAAKA,UAAU,qBACb,4EACA,wBAAIA,UAAU,gBACZ,sKAKA,wKAKA,4BACE,wEAIN,yBAAKA,UAAU,cACb,yDCtBGgF,OAnBf,WAGE,OACE,yBAAKhF,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,kBACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,wBAAIA,UAAU,YACd,kBAAC,EAAD,MACA,wBAAIA,UAAU,YACd,kBAAC,EAAD,SCTYiF,QACW,cAA7B5E,OAAO6E,SAASC,UAEe,UAA7B9E,OAAO6E,SAASC,UAEhB9E,OAAO6E,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.4c102157.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sami.ff8d5e0c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/netflix.3a7197bb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/airbnb.27467011.jpg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.f8d06c0f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/amazon.3fa9524f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/reddit.112a1b9e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spotify.2e742050.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vacation.89f50755.jpg\";","module.exports = __webpack_public_path__ + \"static/media/imessage.9fb428d4.jpg\";","import React from 'react';\r\nimport './SectionHeader.css';\r\nconst SectionHeader = ({ title, color }) => {\r\n  return (\r\n    <div\r\n      className='section__header'\r\n      style={color ? { color: `${color}` } : { color: 'black' }}\r\n    >\r\n      {title}\r\n      <div className='sectionHeader__border'></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SectionHeader;\r\n","import React from 'react';\r\nimport './About.css';\r\nimport SectionHeader from './SectionHeader';\r\nconst About = () => {\r\n  return (\r\n    <section className='about' id='about'>\r\n      <div className='about__container'>\r\n        <SectionHeader title='About' color='white' />\r\n        <div className='about__contact__field'>\r\n          <h6 className='about__contact__subheader'>Email</h6>\r\n          <div\r\n            onClick={() => window.open(`mailto:samiahmad.dev@gmail.com`)}\r\n            className='about__contact__email'\r\n          >\r\n            samiahmad.dev@gmail.com\r\n          </div>\r\n        </div>\r\n        <div className='about__contact__field'>\r\n          <h6 className='about__contact__subheader'>You can also find me at</h6>\r\n          <h6>\r\n            <a href='https://github.com/1ahmadsam/'>github.com</a>\r\n          </h6>\r\n          <h6>\r\n            <a href='https://www.upwork.com/freelancers/~01922346a9fb57e9e5'>\r\n              upwork.com\r\n            </a>\r\n          </h6>\r\n        </div>\r\n        <div className='about__desciption'>\r\n          <p>\r\n            My name is Sami Ahmad, I am a Full Stack ReactJS and Node.js\r\n            developer. In my free time I like to make projects that push me out\r\n            of my comfort zone, so that I can learn something new everyday.{' '}\r\n          </p>\r\n          <p>\r\n            I am always interested in working on projects that are ambitious in\r\n            nature, and push the boundaries of technologies that I use.{' '}\r\n            <b>Checkout some of my previous projects below.</b>\r\n          </p>\r\n          {/* <p>A few skills I have learned: </p>\r\n          <ul>\r\n            <li>HTML & CSS</li>\r\n            <li>Javascript</li>\r\n            <li>React</li>\r\n            <li>Node.js</li>\r\n          </ul> */}\r\n          {/* <div className='about__contact'>\r\n              <a></a>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <section className='home' id='home'>\r\n      <div className='home__banner'>\r\n        <div className='home__bannerText'>\r\n          <h1 className='home__bannerHeader'>Sami Ahmad</h1>\r\n          <h3 className='home__bannerSubtext'>Full-Stack developer</h3>\r\n          <div className='home__bannerButton'>\r\n            <Button\r\n              variant='outlined'\r\n              disableElevation\r\n              onClick={() => window.open(`mailto:samiahmad.dev@gmail.com`)}\r\n            >\r\n              Get in Touch\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react';\r\nimport './Navbar.css';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport sami from './images/sami.jpg';\r\nimport { Link, animateScroll as scroll } from 'react-scroll';\r\nimport { Button } from '@material-ui/core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\nconst Navbar = () => {\r\n  const [anchorEl, setAnchorEl] = useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setAnchorEl((anchorEl) => !anchorEl);\r\n  };\r\n  return (\r\n    <>\r\n      <nav className='navbar'>\r\n        <div className='navbar__mobile'>\r\n          <h1>Sami Ahmad</h1>\r\n          <Button onClick={handleDrawerToggle}>\r\n            <MenuIcon className='navbar__menuIcon' />\r\n          </Button>\r\n        </div>\r\n        <ul className='navbar__nav'>\r\n          <Avatar className='navbar__profile' alt='Sami Ahmad' src={sami} />\r\n          <li className='navbar__item'>\r\n            <Link\r\n              className='navbar__link'\r\n              activeClass='navbar__selected'\r\n              to='home'\r\n              spy={true}\r\n              smooth={true}\r\n              duration={500}\r\n            >\r\n              Home\r\n            </Link>\r\n          </li>\r\n\r\n          <li className='navbar__item'>\r\n            <Link\r\n              className='navbar__link'\r\n              activeClass='navbar__selected'\r\n              to='about'\r\n              spy={true}\r\n              smooth={true}\r\n              duration={500}\r\n            >\r\n              About\r\n            </Link>\r\n          </li>\r\n          <li className='navbar__item'>\r\n            <Link\r\n              className='navbar__link'\r\n              activeClass='navbar__selected'\r\n              to='project'\r\n              spy={true}\r\n              smooth={true}\r\n              duration={500}\r\n            >\r\n              Projects\r\n            </Link>\r\n          </li>\r\n          <li className='navbar__item'>\r\n            <Link\r\n              className='navbar__link'\r\n              activeClass='navbar__selected'\r\n              to='work'\r\n              spy={true}\r\n              smooth={true}\r\n              duration={500}\r\n            >\r\n              Work\r\n            </Link>\r\n          </li>\r\n\r\n          {/* <li className='navbar__item'>\r\n            <Link\r\n              className='navbar__link'\r\n              activeClass='navbar__selected'\r\n              to='work'\r\n              spy={true}\r\n              smooth={true}\r\n              duration={500}\r\n              offset={100}\r\n            >\r\n              Contact\r\n            </Link>\r\n          </li> */}\r\n\r\n          <li className='navbar__item navbar--socials'>\r\n            <div\r\n              className='navbar__social'\r\n              onClick={() => window.open(`mailto:samiahmad.dev@gmail.com`)}\r\n            >\r\n              <FontAwesomeIcon icon={faEnvelope} size='lg' />{' '}\r\n              <span className='navbar__socialText'>Email</span>\r\n            </div>\r\n\r\n            <a\r\n              href='https://github.com/1ahmadsam/'\r\n              className='navbar__social'\r\n              rel='noopener noreferrer'\r\n              target='_blank'\r\n            >\r\n              <FontAwesomeIcon icon={faGithub} size='lg' />\r\n              <span className='navbar__socialText'>Github</span>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <div\r\n        className={\r\n          anchorEl\r\n            ? 'navbar__mobileCollapse'\r\n            : 'navbar__mobileCollapse collapse'\r\n        }\r\n      >\r\n        <ul>\r\n          <li className='navbar__item'>\r\n            <Link\r\n              className='navbar__mobileLink'\r\n              activeClass='navbar__selected'\r\n              to='home'\r\n              spy={true}\r\n              smooth={true}\r\n              duration={500}\r\n            >\r\n              Home\r\n            </Link>\r\n          </li>\r\n\r\n          <li className='navbar__item'>\r\n            <Link\r\n              className='navbar__mobileLink'\r\n              activeClass='navbar__selected'\r\n              to='about'\r\n              spy={true}\r\n              smooth={true}\r\n              duration={500}\r\n            >\r\n              About\r\n            </Link>\r\n          </li>\r\n          <li className='navbar__item'>\r\n            <Link\r\n              className='navbar__mobileLink'\r\n              activeClass='navbar__selected'\r\n              to='project'\r\n              spy={true}\r\n              smooth={true}\r\n              duration={500}\r\n            >\r\n              Projects\r\n            </Link>\r\n          </li>\r\n          <li className='navbar__item'>\r\n            <Link\r\n              className='navbar__mobileLink'\r\n              activeClass='navbar__selected'\r\n              to='work'\r\n              spy={true}\r\n              smooth={true}\r\n              duration={500}\r\n            >\r\n              Work\r\n            </Link>\r\n          </li>\r\n\r\n          {/* <li className='navbar__item'>\r\n            <Link\r\n              className='navbar__mobileLink'\r\n              activeClass='navbar__selected'\r\n              to='contact'\r\n              spy={true}\r\n              smooth={true}\r\n              duration={500}\r\n            >\r\n              Contact\r\n            </Link>\r\n          </li> */}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport './Project.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\nimport Chip from '@material-ui/core/Chip';\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 400,\r\n    margin: 20,\r\n    borderRadius: 10,\r\n    boxShadow: '0px 24px 14px -3px rgba(199,199,199,1)',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n  },\r\n  media: {\r\n    paddingTop: '56.25%',\r\n    objectFit: 'cover',\r\n    backgroundPosition: 'left',\r\n  },\r\n  button: {\r\n    width: '50%',\r\n    padding: '1rem',\r\n  },\r\n  link: {\r\n    marginLeft: 8,\r\n  },\r\n});\r\n\r\nconst Project = ({\r\n  image,\r\n  title,\r\n  description,\r\n  liveDemo,\r\n  githubLink,\r\n  projectTags,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia className={classes.media} image={image} title={title} />\r\n        <CardContent className='project__content'>\r\n          <h2>{title}</h2>\r\n          <p>{description}</p>\r\n          {projectTags ? (\r\n            <div className='project__labels'>\r\n              {projectTags.map((tag) => (\r\n                <Chip label={tag} key={tag} />\r\n              ))}\r\n            </div>\r\n          ) : null}\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <div className='project__buttons'>\r\n        <Button\r\n          className={classes.button}\r\n          size='small'\r\n          color='primary'\r\n          rel='noopener noreferrer'\r\n          target='_blank'\r\n          href={liveDemo}\r\n        >\r\n          live demo <LaunchIcon className='project__icon pulse' />\r\n        </Button>\r\n        <Button\r\n          className={classes.button}\r\n          size='small'\r\n          color='primary'\r\n          rel='noopener noreferrer'\r\n          target='_blank'\r\n          href={githubLink}\r\n        >\r\n          github <LinkIcon className={classes.link} />\r\n        </Button>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","import React from 'react';\r\nimport './Projects.css';\r\nimport Fade from 'react-reveal/Fade';\r\nimport Project from './Project';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SectionHeader from './SectionHeader';\r\n// Project images\r\nimport NetflixClone from './images/netflix.jpg';\r\nimport AirBnbClone from './images/airbnb.jpg';\r\nimport TwitterClone from './images/twitter.jpg';\r\nimport AmazonClone from './images/amazon.jpg';\r\nimport RedditClone from './images/reddit.jpg';\r\nimport SpotifyClone from './images/spotify.jpg';\r\nimport VacationClone from './images/vacation.jpg';\r\nimport ImessageClone from './images/imessage.jpg';\r\n\r\nconst Projects = () => {\r\n  return (\r\n    <section className='projects' id='project'>\r\n      <div className='projects__container'>\r\n        <SectionHeader title={'PROJECTS'} />\r\n        <Container maxWidth='xl'>\r\n          <Grid container spacing={3} className='projects__grid'>\r\n            <Project\r\n              image={NetflixClone}\r\n              title={'Netflix Clone'}\r\n              description={\r\n                'Netflix clone built using ReactJS and TMDB database API'\r\n              }\r\n              liveDemo={'https://netflix-clone-b21fc.web.app/'}\r\n              githubLink={'https://github.com/1ahmadsam/netflix-clone'}\r\n              projectTags={['ReactJS', 'Firebase', 'Material-UI']}\r\n            />\r\n\r\n            <Project\r\n              image={AirBnbClone}\r\n              title={'AirBNB Clone'}\r\n              description={\r\n                'AirBNB clone build using ReactJS with React router, and MaterialUI'\r\n              }\r\n              liveDemo={'https://airbnb-clone-f7892.web.app/'}\r\n              githubLink={'https://github.com/1ahmadsam/airbnb-clone'}\r\n              projectTags={['ReactJS', 'Firebase', 'Material-UI']}\r\n            />\r\n\r\n            <Project\r\n              image={VacationClone}\r\n              title={'VacationList App'}\r\n              description={\r\n                'Vacationlist app build using Javascript, using OpenWeather API and Chart.js to compare temperature & weather types'\r\n              }\r\n              liveDemo={'https://vacation-list-59e8b.web.app/'}\r\n              githubLink={'https://github.com/1ahmadsam/VacationList'}\r\n              projectTags={['Javascript', 'Firebase']}\r\n            />\r\n            <Project\r\n              image={TwitterClone}\r\n              title={'Twitter Clone'}\r\n              description={\r\n                'Twitter Clone build using Javascript, and Firebase hosting'\r\n              }\r\n              liveDemo={'https://twitter-clone-d1d7c.web.app/'}\r\n              githubLink={'https://github.com/1ahmadsam/twitter-clone'}\r\n              projectTags={['Javascript', 'Firebase', 'Material-UI']}\r\n            />\r\n\r\n            <Project\r\n              image={RedditClone}\r\n              title={'Reddit Clone'}\r\n              description={\r\n                'Reddit clone build using ReactJS with Reddit API, Material UI, State Management with Context API, Firebase Hosting'\r\n              }\r\n              liveDemo={'https://reddit-clone-e0296.web.app/'}\r\n              githubLink={'https://github.com/1ahmadsam/reddit_clone'}\r\n              projectTags={['ReactJS', 'Firebase', 'Material UI']}\r\n            />\r\n\r\n            <Project\r\n              image={ImessageClone}\r\n              title={'iMessage Clone'}\r\n              description={\r\n                'iMessage clone build using ReactJS , Material UI, State Management with Redux, Firebase Hosting and Realtime Database'\r\n              }\r\n              liveDemo={'https://imessage-clone-e89c7.web.app/'}\r\n              githubLink={'https://github.com/1ahmadsam/imessage-clone'}\r\n              projectTags={[\r\n                'ReactJS',\r\n                'Firebase',\r\n                'Material UI',\r\n                'Authentication',\r\n                'Redux',\r\n                'Realtime DB',\r\n              ]}\r\n            />\r\n            <Project\r\n              image={AmazonClone}\r\n              title={'Amazon Clone'}\r\n              description={\r\n                'Amazon clone build using ReactJS, NodeJS + Express, Stripe Payment, Material UI, Context API, Firebase Hosting, Authentication and Functions'\r\n              }\r\n              liveDemo={'https://clone-5e662.web.app/'}\r\n              githubLink={'https://github.com/1ahmadsam/amazon-clone'}\r\n              projectTags={[\r\n                'ReactJS',\r\n                'Node.js',\r\n                'Firebase',\r\n                'Stripe',\r\n                'Authentication',\r\n                'Context API',\r\n                'Material UI',\r\n              ]}\r\n            />\r\n            <Project\r\n              image={SpotifyClone}\r\n              title={'Spotify Clone'}\r\n              description={\r\n                'Spotify clone build using ReactJS with Spotify API, User Authentication, Material UI, State Management with Context API, Firebase Hosting'\r\n              }\r\n              liveDemo={'https://spotify-clone-aa032.web.app/'}\r\n              githubLink={'https://github.com/1ahmadsam/spotify-clone'}\r\n              projectTags={[\r\n                'ReactJS',\r\n                'Firebase',\r\n                'Authentication',\r\n                'Material UI',\r\n              ]}\r\n            />\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React from 'react';\r\nimport './Work.css';\r\n\r\nimport SectionHeader from './SectionHeader';\r\nconst Work = () => {\r\n  return (\r\n    <section className='work' id='work'>\r\n      <SectionHeader title='experience' />\r\n      <div className='work__container'>\r\n        <div className='work__item'>\r\n          <div className='work__description'>\r\n            <h3>French Translation Integration</h3>\r\n            <ul className='work__points'>\r\n              <li>\r\n                Integrated french translations on Canadian website to help reach\r\n                customers that are french or english in .NET\r\n              </li>\r\n              <li>\r\n                Explored the capabilities of a tool that allows globalization of\r\n                websites using custom resources\r\n              </li>\r\n              <li>\r\n                <b>Technologies: .NET Framework, C#</b>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className='work__date'>\r\n            <h4>Dec 2019 - Jan 2020</h4>\r\n          </div>\r\n        </div>\r\n        <div className='work__item'>\r\n          <div className='work__description'>\r\n            <h3>Reservation Transactions - Automation System</h3>\r\n            <ul className='work__points'>\r\n              <li>\r\n                Co Developed an Automation System, a tool that is used to grab\r\n                all transaction details from a date the user decides on and\r\n                merges them\r\n              </li>\r\n              <li>\r\n                Created the user flow required to allow the program to find the\r\n                specific reservation and extract the information using Python\r\n                and Scrapy\r\n              </li>\r\n              <li>\r\n                <b>Technologies: Python, Scrapy, Selenium</b>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className='work__date'>\r\n            <h4>Oct 2019 - Jan 2020</h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Work;\r\n","import React from 'react';\r\nimport About from './About';\r\nimport './App.css';\r\nimport Contact from './Contact';\r\nimport Home from './Home';\r\nimport Navbar from './Navbar';\r\nimport Projects from './Projects';\r\nimport Work from './Work';\r\n// import {useSpring, animated} from 'react-spring'\r\nfunction App() {\r\n  //  const props = useSpring({opacity: 1, from: {opacity: 0}})\r\n\r\n  return (\r\n    <div className='app'>\r\n      <Navbar />\r\n      <div className='app__container'>\r\n        <Home />\r\n        <About />\r\n        <hr className='app__hr' />\r\n        <Projects />\r\n        <hr className='app__hr' />\r\n        <Work />\r\n        {/* <Contact/> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}